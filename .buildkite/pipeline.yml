steps:
  # Downstream CUDA Tests
  - group: ":telescope: Downstream CUDA"
    steps:
      - label: ":julia: {{matrix.repo}} (Julia {{matrix.julia}} + CUDA GPU)"
        plugins:
          - JuliaCI/julia#v1:
              version: "{{matrix.julia}}"
          - JuliaCI/julia-coverage#v1:
              codecov: true
              dirs:
                - src
        command: |
          julia --code-coverage=user --color=yes --project -e '
            using Pkg

            repo = ENV["DOWNSTREAM_TEST_REPO"]

            println("--- :julia: Instantiating project")
            withenv("JULIA_PKG_PRECOMPILE_AUTO" => 0) do
              Pkg.instantiate()

              try
                Pkg.develop(repo)
                println("+++ :julia: Running tests")
                Pkg.test("$(repo)"; coverage=true)
              catch err
                err isa Pkg.Resolve.ResolverError || rethrow()
                @info "Not compatible with this release. No problem." exception=err
                exit(0)
              end
            end

            println("+++ :julia: Finished Downstream Test")'
        agents:
          queue: "juliagpu"
          cuda: "*"
        env:
          BACKEND_GROUP: "CUDA"
          DOWNSTREAM_TEST_REPO: "{{matrix.repo}}"
        if: build.message !~ /\[skip tests\]/ || build.message !~ /\[skip downstream\]/
        timeout_in_minutes: 240
        matrix:
          setup:
            julia:
              - "1"
            repo:
              - "Lux"
              - "Boltz"

  # Downstream AMDGPU Tests
  - group: ":telescope: Downstream AMD GPU"
    steps:
      - label: ":julia: {{matrix.repo}} (Julia {{matrix.julia}} + AMD GPU)"
        plugins:
          - JuliaCI/julia#v1:
              version: "{{matrix.julia}}"
          - JuliaCI/julia-coverage#v1:
              codecov: true
              dirs:
                - src
        command: |
          julia --code-coverage=user --color=yes --project -e '
            using Pkg

            repo = ENV["DOWNSTREAM_TEST_REPO"]

            println("--- :julia: Instantiating project")
            withenv("JULIA_PKG_PRECOMPILE_AUTO" => 0) do
              Pkg.instantiate()

              try
                Pkg.develop(repo)
                println("+++ :julia: Running tests")
                Pkg.test("$(repo)"; coverage=true)
              catch err
                err isa Pkg.Resolve.ResolverError || rethrow()
                @info "Not compatible with this release. No problem." exception=err
                exit(0)
              end
            end

            println("+++ :julia: Finished Downstream Test")'
        agents:
          queue: "juliagpu"
          rocm: "*"
          rocmgpu: "*"
        env:
          BACKEND_GROUP: "AMDGPU"
          JULIA_AMDGPU_CORE_MUST_LOAD: "1"
          JULIA_AMDGPU_HIP_MUST_LOAD: "1"
          JULIA_AMDGPU_DISABLE_ARTIFACTS: "1"
          DOWNSTREAM_TEST_REPO: "{{matrix.repo}}"
        if: build.message !~ /\[skip tests\]/ || build.message !~ /\[skip downstream\]/
        timeout_in_minutes: 240
        matrix:
          setup:
            julia:
              - "1"
            repo:
              - "Lux"
              - "Boltz"

env:
  RETESTITEMS_NWORKERS: 8
  RETESTITEMS_NWORKER_THREADS: 2
  SECRET_CODECOV_TOKEN: "Kd5OoJmg0QG6UN1FXKiafA3WtSj7jOeC6dwD62AQrunXKZp9G8jifFJiHKN2kqfulE7Q3h+Fr2wo6ToIbF8yWVN0qya/VY90QVvVkBpr0KKW9ocIhGghHzeXRwlPk3p6Ws0dc52o6XMr6axps7bv8joKzMblrAbCBs9KZ1YSL+8rQKal5VolQtBV8Nz2DL7V4xqIhxHE9HoJq7Mi9hFaDEtU4DsxjlpNJbwnsLHx+qEK3TORK8RfM5UEDxhObkd2m7xPK0xdUSKGNK7dsJlnkPPlLwNVKYLQou960YiuLJhsXNDl/cnBEP5UX9hVzqzdyYzwwXg69G0Om7XTJVDO9A==;U2FsdGVkX1+0o0cndEEUKum97YC5iNiXqWqKD49nU3XJvdFh0eZn7oQA6eGwFpTWm2sJMvFIroKZ0PHrew9mCQ=="

